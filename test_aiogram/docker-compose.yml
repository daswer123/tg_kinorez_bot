version: '3.8'

services:
  api-backend:
    image: aiogram/telegram-bot-api:latest
    container_name: youtube-api-backend
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - telegram-bot-api-data:/var/lib/telegram-bot-api
    networks:
      - youtube-network
  
  postgres:
    image: postgres:15-alpine
    container_name: youtube-postgres
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - youtube-network
  
  redis:
    image: redis:7-alpine
    container_name: youtube-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    env_file:
      - .env
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - youtube-network
    
  api:
    image: nginx:1.21-alpine
    container_name: youtube-nginx
    restart: unless-stopped
    volumes:
      - ./nginx:/etc/nginx/conf.d/
      - telegram-bot-api-data:/var/lib/telegram-bot-api:ro
    depends_on:
      - api-backend
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://127.0.0.1/"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - youtube-network
    
  bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: youtube-bot
    restart: unless-stopped
    stop_signal: SIGINT
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - telegram-bot-api-data:/var/lib/telegram-bot-api:ro
      - ./temp_videos:/app/temp_videos
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      api-backend:
        condition: service_started
    networks:
      - youtube-network

volumes:
  telegram-bot-api-data:
    driver: local
  postgres-data:
    driver: local
  redis-data:
    driver: local

networks:
  youtube-network:
    driver: bridge 